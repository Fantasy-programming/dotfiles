# ░█░█░█▀▀░█░█░█▀▄░▀█▀░█▀█░█▀▄░▀█▀░█▀█░█▀▀░█▀▀
# ░█▀▄░█▀▀░░█░░█▀▄░░█░░█░█░█░█░░█░░█░█░█░█░▀▀█
# ░▀░▀░▀▀▀░░▀░░▀▀░░▀▀▀░▀░▀░▀▀░░▀▀▀░▀░▀░▀▀▀░▀▀▀

$mainMod = SUPER

$files = thunar
$term = kitty

# Default
$scriptsDir = $HOME/.config/hypr/scripts
$configs = $HOME/.config/hypr/configs

# User
$UserConfigs = $HOME/.config/hypr/UserConfigs
$UserScripts = $HOME/.config/hypr/UserScripts


# ░█░█░▀█▀░█▀█░█▀▄░█▀█░█░█
# ░█▄█░░█░░█░█░█░█░█░█░█▄█
# ░▀░▀░▀▀▀░▀░▀░▀▀░░▀▀▀░▀░▀

# Window --> Actions on active window
bind = $mainMod, Q, killactive, # kill active window
bind = $mainMod, F, fullscreen # make fullscreen
bind = $mainMod SHIFT, F, togglefloating, # make the window floating
bind = $mainMod SHIFT, Q, exec, $scriptsDir/KillActiveProcess.sh #kill process ?
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod SHIFT, P, pin # pin active window due workspaces

# Window --> Actions on multiple window
bind = $mainMod ALT, F, exec, hyprctl dispatch workspaceopt allfloat # make everything floating
bind = $mainMod SHIFT, I, togglesplit # only works on dwindle layout - switch split
bind = $mainMod, M, exec, ~/.config/hypr/scripts/toggle_layout.sh # toggle dwindle/master

# Window --> Grouping
bind = $mainMod, G, togglegroup
bind = $mainMod CTRL, tab, changegroupactive  #change focus to another window

# Window --> Master Layout
bind = $mainMod CTRL, D, layoutmsg, removemaster
bind = $mainMod, I, layoutmsg, addmaster
bind = $mainMod, J, layoutmsg, cyclenext
bind = $mainMod, K, layoutmsg, cycleprev
bind = $mainMod CTRL, Return, layoutmsg, swapwithmaster

# Window --> Resize
binde = $mainMod SHIFT, left, resizeactive,-50 0
binde = $mainMod SHIFT, right, resizeactive,50 0
binde = $mainMod SHIFT, up, resizeactive,0 -50
binde = $mainMod SHIFT, down, resizeactive,0 50
binde = $mainMod SHIFT, H, resizeactive,-50 0
binde = $mainMod SHIFT, L, resizeactive,50 0
binde = $mainMod SHIFT, K, resizeactive,0 -50
binde = $mainMod SHIFT, J, resizeactive,0 50

# Window --> Move
bind = $mainMod CTRL, left, movewindow, l
bind = $mainMod CTRL, right, movewindow, r
bind = $mainMod CTRL, up, movewindow, u
bind = $mainMod CTRL, down, movewindow, d
bind = $mainMod CTRL, H, movewindow, l
bind = $mainMod CTRL, L, movewindow, r
bind = $mainMod CTRL, K, movewindow, u
bind = $mainMod CTRL, J, movewindow, d

# Window --> Focus
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d
bind = ALT, tab, cyclenext
bind = ALT, tab, bringactivetotop 

# ░█░█░█▀█░█▀▄░█░█░█▀▀░█▀█░█▀█░█▀▀░█▀▀░█▀▀
# ░█▄█░█░█░█▀▄░█▀▄░▀▀█░█▀▀░█▀█░█░░░█▀▀░▀▀█
# ░▀░▀░▀▀▀░▀░▀░▀░▀░▀▀▀░▀░░░▀░▀░▀▀▀░▀▀▀░▀▀▀

# Window --> Switch workspaces with mainMod + [1-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, tab, workspace, m+2
bind = $mainMod SHIFT, tab, workspace, m-2

# Window --> Move window to workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, bracketleft, movetoworkspace, -2 # brackets [ or ]
bind = $mainMod SHIFT, bracketright, movetoworkspace, +2

bind = $mainMod CTRL, 1, movetoworkspacesilent, 1
bind = $mainMod CTRL, 2, movetoworkspacesilent, 2
bind = $mainMod CTRL, 3, movetoworkspacesilent, 3
bind = $mainMod CTRL, 4, movetoworkspacesilent, 4
bind = $mainMod CTRL, 5, movetoworkspacesilent, 5
bind = $mainMod CTRL, 6, movetoworkspacesilent, 6
bind = $mainMod CTRL, 7, movetoworkspacesilent, 7
bind = $mainMod CTRL, 8, movetoworkspacesilent, 8
bind = $mainMod CTRL, 9, movetoworkspacesilent, 9
bind = $mainMod CTRL, bracketleft, movetoworkspacesilent, -2 # brackets [ or ]
bind = $mainMod CTRL, bracketright, movetoworkspacesilent, +2

# █▀▄▀█ █▀█ █░█ █▀ █▀▀   █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀
# █░▀░█ █▄█ █▄█ ▄█ ██▄   █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█

# Window --> Move window to workspace
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bind = $mainMod, mouse_down, workspace, e+2
bind = $mainMod, mouse_up, workspace, e-2
bind = $mainMod, period, workspace, e+2
bind = $mainMod, comma, workspace, e-2


# █▀ █▀█ █▀▀ █▀▀ █ ▄▀█ █░░
# ▄█ █▀▀ ██▄ █▄▄ █ █▀█ █▄▄

# Keybindings --> Special Keys
bind = , xf86audioraisevolume, exec, $scriptsDir/Volume.sh --inc #volume up
bind = , xf86audiolowervolume, exec, $scriptsDir/Volume.sh --dec #volume down
bind = , xf86AudioMicMute, exec, $scriptsDir/Volume.sh --toggle-mic #mute mic
bind = , xf86audiomute, exec, $scriptsDir/Volume.sh --toggle
bind = , xf86Sleep, exec, systemctl suspend  # sleep button 
bind = , xf86Rfkill, exec, $scriptsDir/AirplaneMode.sh #Airplane mode

bind = , xf86AudioPlayPause, exec, $scriptsDir/MediaCtrl.sh --pause
bind = , xf86AudioPause, exec, $scriptsDir/MediaCtrl.sh --pause
bind = , xf86AudioPlay, exec, $scriptsDir/MediaCtrl.sh --pause
bind = , xf86AudioNext, exec, $scriptsDir/MediaCtrl.sh --nxt
bind = , xf86AudioPrev, exec, $scriptsDir/MediaCtrl.sh --prv
bind = , xf86audiostop, exec, $scriptsDir/MediaCtrl.sh --stop

bind = , XF86MonBrightnessDown,exec,brightnessctl set 10%-
bind = , XF86MonBrightnessUp,exec,brightnessctl set +10%

# Laptop --> Brightness, Touchpad
binde = , xf86KbdBrightnessDown, exec, $scriptsDir/BrightnessKbd.sh --dec #Keyboard brightness Down
binde = , xf86KbdBrightnessUp, exec, $scriptsDir/BrightnessKbd.sh --inc #Keyboard brightness up
bind = , xf86TouchpadToggle, exec, $scriptsDir/TouchPad.sh #disable touchpad


# Keybindings --> Laptop lids
# bindl = ,switch:off:Lid Switch, exec, hyprctl keyword monitor "eDP-2, auto, 0x0, 1"
# bindl = ,switch:on:Lid Switch, exec, hyprctl keyword monitor "eDP-2, disable"

# Keybindings --> ScreenShot
bind = $mainMod, Print, exec, $scriptsDir/ScreenShot.sh --now
bind = $mainMod SHIFT, Print, exec, $scriptsDir/ScreenShot.sh --area
bind = $mainMod CTRL, Print, exec, $scriptsDir/ScreenShot.sh --in5 #screenshot in 5 secs
bind = $mainMod CTRL SHIFT, Print, exec, $scriptsDir/ScreenShot.sh --in10 #screenshot in 10 secs
bind = ALT, Print, exec, $scriptsDir/ScreenShot.sh --active #take screenshot of active window
bind = $mainMod SHIFT, S, exec, $scriptsDir/ScreenShot.sh --swappy #screenshot with swappy

# Keybindings --> Recordings
# bind = Super+Alt, R, exec, ~/.config/ags/scripts/record-script.sh # Record region (no sound)
# bind = Ctrl+Alt, R, exec, ~/.config/ags/scripts/record-script.sh --fullscreen # [hidden] Record screen (no sound)
# bind = Super+Shift+Alt, R, exec, ~/.config/ags/scripts/record-script.sh --fullscreen-sound # Record screen (with sound)
# bind = SUPERALT, Print, exec, ~/.config/hypr/scripts/record_screen
# bind = $mainMod SHIFT, V, exec, ~/.config/hypr/scripts/waybar-wf-recorder.sh toggle fullscreen # SCREENCAST START/STOP

# Keybindings --> Color Picker
bind = $mainMod Shift, C, exec, hyprpicker -a # Pick color (Hex) >> clipboard

# Keybindings --> OCR
bind = Super+Shift,T,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract -l eng "tmp.png" - | wl-copy && rm "tmp.png" # Screen snip to text >> clipboard

# Keybindings --> System
bind = CTRL ALT, Delete, exec, hyprctl dispatch exit 0 # go back to login screen
bind = CTRL ALT, L, exec, $scriptsDir/LockScreen.sh
bind = CTRL ALT, P, exec, $scriptsDir/Wlogout.sh

# Keybindings --> Applications
bind = $mainMod, Return, exec, $term  # Launch terminal
bind = $mainMod, T, exec, $files # Launch file manager
bind = $mainMod, D, exec, pkill rofi || rofi -show drun -modi drun,filebrowser,run,window

# Keybindings --> Pyprland
bind = $mainMod SHIFT, Return, exec, pypr toggle term # Dropdown terminal
bind = $mainMod, Z, exec, pypr zoom # Toggle Zoom


# Keybindings --> Features
bind = $mainMod, B, exec, pkill -SIGUSR2 waybar # Toggle hide/show waybar 
bind = $mainMod, H, exec, $scriptsDir/KeyHints.sh # Small help file
bind = $mainMod ALT, R, exec, $scriptsDir/Refresh.sh # Refresh waybar, swaync, rofi
bind = $mainMod ALT, E, exec, $scriptsDir/RofiEmoji.sh # emoji
bind = $mainMod, S, exec, $scriptsDir/RofiSearch.sh # Google search from Rofi
bind = $mainMod SHIFT, B, exec, $scriptsDir/ChangeBlur.sh # Toggle blur settings 
bind = $mainMod SHIFT, G, exec, $scriptsDir/GameMode.sh # animations ON/OFF
bind = $mainMod ALT, L, exec, $scriptsDir/ChangeLayout.sh # Toggle Master or Dwindle Layout
bind = $mainMod ALT, V, exec, $scriptsDir/ClipManager.sh # Clipboard Manager
bind = $mainMod SHIFT, N, exec, swaync-client -t -sw # swayNC panel
bind = $mainMod SHIFT, M, exec, $UserScripts/RofiBeats.sh # online music
bind = $mainMod, W, exec, $UserScripts/WallpaperSelect.sh # Select wallpaper to apply
bind = $mainMod SHIFT, W, exec, $UserScripts/WallpaperEffects.sh # Wallpaper Effects by imagemagickWW
bind = CTRL ALT, W, exec, $UserScripts/WallpaperRandom.sh # Random wallpapers
bind = $mainMod ALT, O, exec, hyprctl setprop active opaque toggle #disable opacity to active window
bind = $mainMod SHIFT, K, exec, $scriptsDir/KeyBinds.sh # searchable keybinds


# Keybindings --> Widgets
# bindr = Ctrl+Super, R, exec, killall ags ydotool; ags & # Restart widgets
# bindr = Ctrl+Super+Alt, R, exec, hyprctl reload; killall ags ydotool; ags & # [hidden]
# bind = Ctrl+Alt, Slash, exec, ags run-js 'cycleMode();' # Cycle bar mode (normal, focus)
# bindir = Super, Super_L, exec, ags -t 'overview' # Toggle overview/launcher
# bind = Super, Tab, exec, ags -t 'overview' # [hidden]
# bind = Super, Slash, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "cheatsheet""$i"; done # Show cheatsheet
# bind = Super, B, exec, ags -t 'sideleft' # Toggle left sidebar
# bind = Super, A, exec, ags -t 'sideleft' # [hidden]
# bind = Super, O, exec, ags -t 'sideleft' # [hidden]
# bind = Super, N, exec, ags -t 'sideright' # Toggle right sidebar
# bind = Super, M, exec, ags run-js 'openMusicControls.value = (!mpris.getPlayer() ? false : !openMusicControls.value);' # Toggle music controls
# bind = Super, Comma, exec, ags run-js 'openColorScheme.value = true; Utils.timeout(2000, () => openColorScheme.value = false);' # View color scheme and options
# bind = Super, K, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "osk""$i"; done # Toggle on-screen keyboard
# bind = Ctrl+Alt, Delete, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "session""$i"; done # Toggle power menu
# bind = Ctrl+Super, G, exec, for ((i=0; i<$(hyprctl monitors -j | jq length); i++)); do ags -t "crosshair""$i"; done # Toggle crosshair
# bindle=, XF86MonBrightnessUp, exec, ags run-js 'brightness.screen_value += 0.05; indicator.popup(1);' # [hidden]
# bindle=, XF86MonBrightnessDown, exec, ags run-js 'brightness.screen_value -= 0.05; indicator.popup(1);' # [hidden]
# bindl  = , XF86AudioMute, exec, ags run-js 'indicator.popup(1);' # [hidden]
# bindl  = Super+Shift,M,   exec, ags run-js 'indicator.popup(1);' # [hidden]


# Keybindings --> Testing
# bind = SuperAlt, f12, exec, notify-send "Hyprland version: $(hyprctl version | head -2 | tail -1 | cut -f2 -d ' ')" "owo" -a 'Hyprland keybind'
# bind = Super+Alt, f12, exec, notify-send "Millis since epoch" "$(date +%s%N | cut -b1-13)" -a 'Hyprland keybind'
# bind = Super+Alt, f12, exec, notify-send 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action" -t 5000 # [hidden]
# bind = Super+Alt, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind' # [hidden]
